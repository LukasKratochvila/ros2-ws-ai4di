# Must be defined name in launch

cam_image:
  ros__parameters:
    reliability: 'reliable' # Reliability QoS setting. Either 'reliable' (default) or 'best_effort'
    history: 'keep_last'    # History QoS setting. Either 'keep_last' (default) or 'keep_all'. If 'keep_last', then up to N samples are stored where N is the depth
    depth: 10               # Depth of the publisher queue. Only honored if history QoS is 'keep_last'. Default value is 10
    frequency: 10.0         # Publish frequency in Hz. Default value is 30
    burger_mode: false      # Produce images of burgers rather than connecting to a camera
    show_camera: false      # Show camera stream. Either 'true' or 'false' (default)
    width: 640              # Width component of the camera stream resolution. Default value is 320
    height: 480             # Height component of the camera stream resolution. Default value is 240
    frame_id: image         # ID of the sensor frame. Default value is 'camera_frame'
    output_topic: /detector_node/images #/image
    device_id: 0
    api_id: 0
    cap_mode: 0
    debug: false

livox:
  ros__parameters:
    xfer_format: 0                              # 0-Pointcloud2(PointXYZRTL), 1-customized pointcloud format
    multi_topic: 0                              # 0-All LiDARs share the same topic, 1-One LiDAR one topic
    data_src: 0                                 # 0-lidar,1-hub
    publish_freq: 10.0                          # freqency of publish,1.0,2.0,5.0,10.0,etc    freq  from (0.1, 100)
    output_data_type: 0                         # Output to ros: 0, Output to bagfile: = 1,
    frame_id: "cloud"
    user_config_path: "/livox/lidar"
    cmdline_input_bd_code: "000000000000001"
    lvx_file_path: "/home/livox/livox_test.lvx"

writer_cpp:
  ros__parameters:
    save_dir: "./"
    img_sub_dir: "image/"
    pcl_sub_dir: "pcl/"
    input_img_topic: "/image"
    input_pcl_topic: "/livox/lidar"
    mode: "both" # img, pcl or both
    synchronized: false
    time_toll: 0.01
    start_img_counter: 0
    start_pcl_counter: 0
    img_file_ext: "jpg"
    pcl_file_ext: "pcd"
    debug: true

#writer_py:
#  ros__parameters:
#    save_dir: "./"
#    img_sub_dir: "image/"
#    pcl_sub_dir: "pcl/"
#    input_img_topic: "/image"
#    input_pcl_topic: "/livox/lidar"
#    mode: "both" # img, pcl or both
#    synchronized: false
#    time_toll: 0.01
#    start_img_counter: 0
#    start_pcl_counter: 0
#    img_file_ext: "jpg"
#    pcl_file_ext: "pcd"
#    debug: true

pcl_pub_cpp_node:
  ros__parameters:
    input_dir: "/home/kratochvila/Desktop/Data/tovarna/vyber/mer1/pcl"
    frequency: 2.0
    output_topic: "/cloud"
    frame_id: "cloud"
    start_counter: 0
    file_ext: ".pcd"
    debug: false
    
#pcl_pub_py:
#  ros__parameters:
#    input_dir: "/home/kratochvila/Desktop/Data/tovarna/vyber/mer1/pcl"
#    frequency: 2.0
#    output_topic: "/cloud"
#    frame_id: "cloud"
#    start_counter: 0
#    file_ext: "pcd"
#    debug: false

img_pub_py:
  ros__parameters:
    input_dir: "/home/kratochvila/Desktop/Data/tovarna/vyber/mer1/image" #"/home/kratochvila/Desktop/lidar/mereni2/image"
    output_topic: "/image"
    frame_id: "image"
    frequency: 2.0
    start_counter: 0
    file_ext: "jpg"
    debug: false

video_pub:
  ros__parameters:
    output_topic: "/image"
    frame_id: "image"
    frequency: 2.0
    encoding: "bgr8"
    debug: false

pcl_preprocessing_node:
  ros__parameters:
    crop: true
    detectFloor: false
    downSample: true
    debug: false
    synchronized: false
    input_topic: "/livox/lidar"
    output_cloud_topic: "/fiteredPcl"
    output_map_topic: "/localMap"
    filter_x_min: 0.1
    filter_y_min: -10.0
    filter_z_min: -0.2
    filter_x_max: 25.0
    filter_y_max: 10.0
    filter_z_max: 2.0
    voxel_grid_x_res: 0.025 # x and y should be same
    voxel_grid_y_res: 0.025
    voxel_grid_z_res: 0.025
    map_frame: "map"
    
detection_matcher:
  ros__parameters:
    Project2D_topic: "/cluster_det"
    Detect2D_topic: "/detector_node/detections"
    Detect3D_topic: "/detections"
    Output3D_topic: "/matched_detections"
    sync_policy: 1000
    tresh: 0.5
    debug: true

clustering:
  ros__parameters:
    cluster_tolerance: 0.2
    min_cluster_size: 20
    max_cluster_size: 10000
    input_topic: "/filteredPcl"
    output_topic: "/detections"
    debug: false

border_checker:
  ros__parameters:
    input_topic: "/cloud"
    output_topic: "topic"
    mean_k: 50
    standard_dev_thresh: 1.0
    first_filter_limits_min: -2.0
    first_filter_limits_max: -0.1
    first_filter_field: "z"
    second_filter_limits_min: 2.0
    second_filter_limits_max: 10.0
    second_filter_field: "z"

map_lookup_node:
  ros__parameters:
    input_topic: "/detections"
    output_boxes_topic: "/unknownObstacles"
    output_map_topic: "/ObstacleMap"
    synchronised: false
    map_server: "/map_server/map"
    debug: false

projection:
  ros__parameters:
    input_topic: "/detections"
    output_topic: "/cluster_det"
    output_pcl_topic: "~/pcl"
    output_img_topic: "~/img"
    output_frame: "image"
    debug: false

# open robotisc - yolo
detector_node:
  ros__parameters:
    network:
      config: "./model/yolov3-tiny.cfg"
      weights: "./model/yolov3-tiny.weights"
      class_names: "./model/coco.names"
    detection:
      threshold: 0.25
      nms_threshold: 0.45

viz:
  ros__parameters:
    output_topic: '~/dbg_images'
    input_img_topic: '/image'
    input_det2d_topic: '/detector_node/detections'
    time_toll: 0.01
    queue_size: 10
    start_counter: 0
    encoding: "bgr8"
    min_size_x: 50
    min_size_y: 50
    debug: false


#map server should be configured mostly correctly, see:
#     https://navigation.ros.org/configuration/packages/configuring-map-server.html
# for params and examples
map_server:
  ros__parameters:
    log_severity: 0 #0-debug, 1-info, 2-Warn, 3-Error, 4-Fatal
    use_sim_time: true
    yaml_filename: "turtlebot3_world.yaml"
    topic_name: "map"
    frame_id: "map"

