# Must be defined name in launch

cam_image_node:
  ros__parameters:
    reliability: 'reliable'               # Reliability QoS setting. Either 'reliable' (default) or 'best_effort'
    history: 'keep_last'                  # History QoS setting. Either 'keep_last' (default) or 'keep_all'. If 'keep_last', then up to N samples are stored where N is the depth
    depth: 10                             # Depth of the publisher queue. Only honored if history QoS is 'keep_last'. Default value is 10
    frequency: 30.0                       # Publish frequency in Hz. Default value is 30
    burger_mode: false                    # Produce images of burgers rather than connecting to a camera
    show_camera: false                    # Show camera stream. Either 'true' or 'false' (default)
    width: 640                            # Width component of the camera stream resolution. Default value is 320
    height: 480                           # Height component of the camera stream resolution. Default value is 240
    frame_id: image                       # ID of the sensor frame. Default value is 'camera_frame'
    output_topic: '/detector_node/images' # Output ROS topic. Default value is 'image'
    device_id: 0                          # ID of the camera source. Default value is '0'
    api_id: 0                             # ID of the opencv api. Default value is '0'
    cap_mode: 0                           # Capture mode (only for libv4l). Default value is '0'
    debug: false

livox_node:
  ros__parameters:
    xfer_format: 0                              # 0-Pointcloud2(PointXYZRTL), 1-customized pointcloud format
    multi_topic: 0                              # 0-All LiDARs share the same topic, 1-One LiDAR one topic
    data_src: 0                                 # 0-lidar,1-hub
    publish_freq: 10.0                          # freqency of publish,1.0,2.0,5.0,10.0,etc    freq  from (0.1, 100)
    output_data_type: 0                         # Output to ros: 0, Output to bagfile: = 1,
    frame_id: "cloud"
    user_config_path: "path_default"
    cmdline_input_bd_code: "000000000000001"
    lvx_file_path: "/home/livox/livox_test.lvx"

decompressor_node:
  ros__parameters:
    input_topic: "/image/compressed"
    output_topic: "/detector_node/images" #'~/raw'
    debug: false

writer_node:
  ros__parameters:
    save_dir: "./"
    img_sub_dir: "image/"
    pcl_sub_dir: "pcl/"
    input_img_topic: "/image"
    input_pcl_topic: "/livox/lidar"
    mode: "both" # img, pcl or both
    synchronized: false
    time_toll: 0.01
    start_img_counter: 0
    start_pcl_counter: 0
    img_file_ext: "jpg"
    pcl_file_ext: "pcd"
    debug: true
pcl_pub_node:
  ros__parameters:
    input_dir: "/home/kratochvila/Desktop/Data/tovarna/vyber/mer1/pcl"
    frequency: 6.0
    output_topic: "/livox/lidar"
    frame_id: "cloud"
    start_counter: 0
    file_ext: ".pcd"
    debug: false
img_pub_node:
  ros__parameters:
    input_dir: "/home/kratochvila/Desktop/Data/tovarna/vyber/mer1/image" #"/home/kratochvila/Desktop/lidar/mereni2/image"
    output_topic: "/detector_node/images"
    frame_id: "image"
    frequency: 30.0
    start_counter: 0
    file_ext: "jpg"
    debug: false
video_pub_node:
  ros__parameters:
    output_topic: "/detector_node/images"
    frame_id: "image"
    frequency: 2.0
    encoding: "bgr8"
    debug: false

pcl_preprocessing_node:
  ros__parameters:
    crop: true
    detectFloor: false
    downSample: true
    debug: false
    synchronized: false
    input_topic: "/livox/lidar"
    output_cloud_topic: "~/filteredPcl"
    output_map_topic: "~/localMap"
    filter_x_min: 0.1
    filter_y_min: -10.0
    filter_z_min: -0.2
    filter_x_max: 25.0
    filter_y_max: 10.0
    filter_z_max: 2.0
    voxel_grid_x_res: 0.025 # x and y should be same
    voxel_grid_y_res: 0.025
    voxel_grid_z_res: 0.025
    map_frame: "map"
    agg_window: 2e8

clustering_node:
  ros__parameters:
    cluster_tolerance: 0.1
    min_cluster_size: 100
    max_cluster_size: 10000
    input_topic: "/pcl_preprocessing_node/filteredPcl/agg"
    output_topic: "~/detections_clusters"
    output_topic_vizualization: "~/detections"
    debug: false

map_lookup_node:
  ros__parameters:
    input_topic: "/clustering_node/detections"
    output_boxes_topic: "~/unknownObstacles"
    output_map_topic: "~/ObstacleMap"
    synchronised: false
    map_server: "/map_server/map"
    debug: false

projection_node:
  ros__parameters:
    input_topic: "/clustering_node/detections"
    output_topic: "~/projections"
    output_pcl_topic: "~/pcl"
    output_img_topic: "~/img"
    output_frame: "image"
    debug: true

# open robotisc - yolo
detector_node:
  ros__parameters:
    network:
      config: "./model/yolov3-tiny.cfg"
      weights: "./model/yolov3-tiny.weights"
      class_names: "./model/coco.names"
    detection:
      threshold: 0.25
      nms_threshold: 0.45
      
detection_matcher_node:
  ros__parameters:
    Project2D_topic: "/projection_node/projections"
    Detect2D_topic: "/detector_node/detections"
    Detect3D_topic: "/clustering_node/detections_clusters"
    Output3D_topic: "~/matched_detections"
    queue_size: 100
    time_toll: 0.1
    tresh: 0.5
    debug: false

tracker_2d_node:
  ros__parameters:
    input_det_topic: '/detector_node/detections'
    output_det_topic: '~/detections_tracker'
    dim: 2
    model_path: "model/tracker-mars-small128.pb"
    debug: false
tracker_3d_node:
  ros__parameters:
    input_det_topic: '/clustering_node/detections_clusters'
    output_det_topic: '~/detections_tracker'
    dim: 3
    model_path: None
    debug: false
    
viz_2d_yolo:
  ros__parameters:
    input_img_topic: '/detector_node/images'
    input_det2d_topic: '/detector_node/detections'
    output_topic: '~/dbg_images'
    time_toll: 0.1
    queue_size: 100
    start_counter: 0
    encoding: "bgr8"
    min_size_x: 50
    min_size_y: 50
    debug: true
viz_2d_projection:
  ros__parameters:
    input_img_topic: '/detector_node/images'
    input_det2d_topic: '/projection_node/projections'
    output_topic: '~/dbg_images'
    time_toll: 0.001
    queue_size: 100
    start_counter: 0
    encoding: "bgr8"
    min_size_x: 50
    min_size_y: 50
    debug: false
viz_2d_tracker:
  ros__parameters:
    input_img_topic: '/detector_node/images'
    input_det2d_topic: '/tracker_2d_node/detections_tracker'
    output_topic: '~/dbg_images'
    time_toll: 0.001
    queue_size: 100
    start_counter: 0
    encoding: "bgr8"
    min_size_x: 50
    min_size_y: 50
    debug: false

viz_3d_clusters:
  ros__parameters:
    input_det3d_topic: '/clustering_node/detections_clusters'
    output_topic: '~/dbg_markers'
    debug: false
viz_3d_matcher:
  ros__parameters:
    input_det3d_topic: '/detection_matcher_node/matched_detections'
    output_topic: '~/dbg_markers'
    debug: false
viz_3d_tracker:
  ros__parameters:
    input_det3d_topic: '/tracker_3d_node/detections_tracker'
    output_topic: '~/dbg_markers'
    debug: true


#map server should be configured mostly correctly, see:
#     https://navigation.ros.org/configuration/packages/configuring-map-server.html
# for params and examples
map_server:
  ros__parameters:
    log_severity: 0 #0-debug, 1-info, 2-Warn, 3-Error, 4-Fatal
    use_sim_time: true
    yaml_filename: "SE1_102_map_new.yaml"
    topic_name: "map"
    frame_id: "map"

